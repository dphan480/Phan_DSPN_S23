boxplot(allocPct~treatment,data=shareAllocation)
shareAllocation = read.csv("https://raw.githubusercontent.com/zjbranson/stat309fall2022/main/shareAllocation.csv")
#make sure the categorical variables are factors
shareAllocation$gender = factor(shareAllocation$gender)
shareAllocation$treatment = factor(shareAllocation$treatment)
boxplot(allocPct~treatment,data=shareAllocation)
interaction.plot(x.factor=shareAllocation$treatment,trace.factor=shareAllocation$gender,response=shareAllocation$allocPct)
summary(aov(allocPct~treatment*gender,data=shareAllocation))
aggregate(allocPct~gender+treatment,data=shareAllocation,FUN=mean)
table(shareAllocation[c(1,2)])
mean(allocPct~gender,data=shareAllocation)
mean(allocPct~male,data=shareAllocation)
mean(allocPct,data=shareAllocation)
aggregate(shareAllocation$allocPct,shareAllocation$gender,FUN=mean)
aggregate(shareAllocation$allocPct,list(shareAllocation$gender),FUN=mean)
#dataset of just subjects assigned to "dissimilar"
shareAllocation.dissimilar = subset(shareAllocation, treatment == "dissimilar")
#dataset of just subjects assigned to "similar"
shareAllocation.similar = subset(shareAllocation, treatment == "similar")
#dataset of just subjects assigned to "unknown"
shareAllocation.unknown = subset(shareAllocation, treatment == "unknown")
t.test(allocPct,gender,data=shareAllocation.dissimilar)
d = shareAllocation.dissimilar
s = shareAllocation.similar
u = shareAllocation.unknown
t.test(d$allocPct,d$gender)
d = shareAllocation.dissimilar
s = shareAllocation.similar
u = shareAllocation.unknown
t.test(d$allocPct~d$gender)
t.test(s$allocPct~s$gender)
t.test(u$allocPct~u$gender)
build = read.csv("https://raw.githubusercontent.com/zjbranson/stat309fall2022/main/build.csv")
#make sure the categorical variables are factors
build$age = factor(build$age)
build$gender = factor(build$gender)
grep("age",colnames(build))
build
table(build[1,2])
table(build[21,2])
table(build[c(1,2)])
interaction.plot(x.factor=age,trace.factor=gender,response=cmHigh,data=build)
b = build
interaction.plot(x.factor=b$age,trace.factor=b$gender,response=b$cmHigh)
summary(aov(cmHigh~gender*age,data=build))
summary(aov(cmHigh~gender+age,data=build))
install.packages('IRkernel')
IRkernel::installspec()
IRkernel::installspec()
install.packages("jupyter-client")
install.packages('IRkernel')
IRkernel::installspec()  # to register the kernel in the current R installation
IRkernal::installspec()
IRkernal.installspec()
IRkernel::installspec()
cwd()
getwd()
getwd()\
getwd()
setwd(C:/Users/david/Phan_DSPN_S23/Phan_DSPN_S23_Final"")
setwd(C:/Users/david/Phan_DSPN_S23/Phan_DSPN_S23_Final")
setwd(C:\Users\david\Phan_DSPN_S23\Phan_DSPN_S23_Final")
setwd("C:\Users\david\Phan_DSPN_S23\Phan_DSPN_S23_Final")
setwd(C:\Users\david\Phan_DSPN_S23\Phan_DSPN_S23_Final")
setwd("C:/Users/david/Phan_DSPN_S23/Phan_DSPN_S23_Final")
knitr::opts_chunk$set(echo = TRUE)
load("MV_Lands")
load("MV_Lands.csv")
MV_Lands = load("MV_Lands.csv")
MV_Lands = load("MV_Lands.csv")
MV_Lands = readRDS("MV_Lands.csv")
MV_Lands = readRDS("MV_Lands",fileext=".csv")
MV_Lands = read.table("MV_Lands.csv")
MV_Lands
MV_Lands = read.table("MV_Lands.csv")
colnames(MV_Lands) = c("MV","Lands")
len(MV_Lands)
length(MV_Lands)
MV_Lands[0,]
MV_Lands[1]
MV_Lands[1,]
MV_Lands[2,]
MV_Lands = read.table("MV_Lands.csv",sep=",")
colnames(MV_Lands) = c("MV","Lands")
MV_Lands
MV_Lands = read.table("MV_Lands.csv",sep=",")
colnames(MV_Lands) = c("MV","Lands")
test = lm(Lands~MV,MV_Lands)
test
summary(test)
16.8834 + 2.27021*3
16.8834 + 2.27021*4
16.8834 + 2.27021*3.7
plot(MV_Lands)
plot(MV_Lands$Lands~MV_Lands$MV)
abline(test)
16.8834 + 2.27021*2
21.4*100/60
knitr::opts_chunk$set(echo = TRUE)
MV_Lands = read.table("MV_Lands.csv",sep=",")
colnames(MV_Lands) = c("MV","Lands")
test = lm(Lands~MV,MV_Lands)
summary(test)
16.613 + 3.35672 * 3
plot(MV_Lands$Lands~MV_Lands$MV)
abline(test)
MV_Lands = read.table("MV_Lands.csv",sep=",")
colnames(MV_Lands) = c("MV","Lands")
test = lm(Lands~MV,MV_Lands)
summary(test)
plot(MV_Lands$Lands~MV_Lands$MV)
18.6128 + 2.5312*3
MV_Lands = read.table("MV_Lands.csv",sep=",")
colnames(MV_Lands) = c("MV","Lands")
test = lm(Lands~MV,MV_Lands)
test = lm(Lands~MV,MV_Lands)
MV_Lands = read.table("MV_Lands.csv",sep=",")
colnames(MV_Lands) = c("MV","Lands")
lm = lm(Lands~MV,MV_Lands)
summary(lm)
